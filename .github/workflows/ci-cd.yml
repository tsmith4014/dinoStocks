name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_REGION: 'us-east-1'
  K8S_NAMESPACE: 'otterpenguin'
  EKS_CLUSTER_NAME: 'dinostocks-cluster'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/dino-app-backend:latest ./backend
        docker push ${{ env.DOCKER_USERNAME }}/dino-app-backend:latest
        docker build -t ${{ env.DOCKER_USERNAME }}/dino-app-frontend:latest ./front_end
        docker push ${{ env.DOCKER_USERNAME }}/dino-app-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Kubeconfig
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Deploy Database to Kubernetes
      run: |
        kubectl apply -f k8s/dinoStocks-postgres-dep.yml
        kubectl apply -f k8s/dinostocks-postgres-svc.yml

    - name: Wait for 15 seconds
      run: sleep 15

    - name: Deploy the rest to Kubernetes
      run: |
        kubectl apply -f k8s/